{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Polymer: WebOps Tooling","text":"<p>Polymer is a tool to help enable developers facilitate their responsibilities in the WebOps space. It is a collection of tools and scripts that help automate the process of deploying and managing web applications.</p>"},{"location":"#quick-start","title":"Quick start","text":"<p>Clone the repository and run <code>ddev init</code>. This will re-create the development environment, build the documentation, and launch the local version of the documentation site in your browser.</p>"},{"location":"#useful-extensions","title":"Useful extensions","text":"<ul> <li>Drupal Integration for Polymer WebOps Tooling.</li> </ul>"},{"location":"development/","title":"Development","text":""},{"location":"development/#ddev","title":"DDEV","text":"<p>This application is developed with DDEV.</p>"},{"location":"development/#custom-commands","title":"Custom commands","text":""},{"location":"development/#ddev-init","title":"<code>ddev init</code>","text":"<p>Initializes the development environment for this tool.</p>"},{"location":"development/#ddev-build-docs","title":"<code>ddev build-docs</code>","text":"<p>Builds the documentation site for this tool.</p> <p>When updating command documentation, run <code>polymer mk:docs</code> to re-generate these files.</p> <p>Tip</p> <p>Run <code>ddev launch :444</code> to open the site in your browser after running <code>ddev build-docs</code>.</p>"},{"location":"development/#ddev-dev-docs","title":"<code>ddev dev-docs</code>","text":"<p>Starts the mkdocs build server and watches for changes.</p> <p>Run <code>ddev launch :445</code> to open the dev site in your browser.</p> <p>When updating command documentation, run <code>polymer mk:docs</code> to re-generate these files.</p> <p>Tip</p> <p>When making changes to the documentation, this is the recommended method to use as it hot reloads changes in the browser.</p>"},{"location":"commands/all/","title":"All commands","text":"<p>Tip</p> <p>Press the / key to Search for a command. Or use your browser's Find in Page feature.</p> <ul> <li>completion</li> <li>composer:validate:security</li> <li>help</li> <li>list</li> <li>mk:docs</li> <li>polymer:init</li> <li>source:build:copy</li> <li>artifact:build:prepare</li> <li>artifact:build:sanitize</li> <li>artifact:compile</li> <li>artifact:composer:install</li> <li>artifact:deploy</li> <li>build</li> <li>build:assets</li> <li>build:reqs</li> </ul>"},{"location":"commands/artifact_build_prepare/","title":"artifact:build:prepare","text":"<p>Prepare the artifact build dir.</p>"},{"location":"commands/artifact_build_prepare/#examples","title":"Examples","text":"<ul> <li><code>polymer artifact:build:prepare</code>. Removes sensitive files from the deploy dir.</li> </ul>"},{"location":"commands/artifact_build_prepare/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/artifact_build_sanitize/","title":"artifact:build:sanitize","text":"<p>Removes sensitive files from the deploy dir.</p>"},{"location":"commands/artifact_build_sanitize/#examples","title":"Examples","text":"<ul> <li><code>polymer artifact:build:sanitize</code>. Removes sensitive files from the deploy dir.</li> </ul>"},{"location":"commands/artifact_build_sanitize/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/artifact_compile/","title":"artifact:compile","text":"<p>Builds deployment artifact.</p>"},{"location":"commands/artifact_compile/#examples","title":"Examples","text":"<ul> <li><code>polymer artifact:compile -v</code>. Builds deployment artifact.</li> </ul>"},{"location":"commands/artifact_compile/#arguments","title":"Arguments","text":"<ul> <li>artifact. The name of the artifact to compile.</li> </ul>"},{"location":"commands/artifact_compile/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/artifact_composer_install/","title":"artifact:composer:install","text":"<p>Installs composer dependencies for artifact.</p>"},{"location":"commands/artifact_composer_install/#examples","title":"Examples","text":"<ul> <li><code>polymer artifact:composer:install -v</code>. Installs composer dependencies for artifact.</li> </ul>"},{"location":"commands/artifact_composer_install/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/artifact_deploy/","title":"artifact:deploy","text":"<p>Builds separate artifact and pushes to 'git.remotes' defined polymer.yml.</p>"},{"location":"commands/artifact_deploy/#examples","title":"Examples","text":"<ul> <li><code>polymer artifact:deploy -v</code>. Builds separate artifact and pushes to git.remotes.</li> </ul>"},{"location":"commands/artifact_deploy/#arguments","title":"Arguments","text":"<ul> <li>artifact. The name of the artifact to deploy.</li> </ul>"},{"location":"commands/artifact_deploy/#options","title":"Options","text":"<ul> <li>--branch=BRANCH. The branch name.</li> <li>--tag=TAG. The tag name.</li> <li>--commit-msg=COMMIT-MSG. The commit message.</li> <li>--dry-run. Show the deploy operations without pushing the artifact.</li> </ul>"},{"location":"commands/artifact_deploy/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/build/","title":"build","text":"<p>Builds the specified build target.</p>"},{"location":"commands/build/#examples","title":"Examples","text":"<ul> <li><code>polymer build theme_build_admin</code>. Runs and builds the \"theme_build_admin\" target.</li> <li><code>polymer build -v</code>. Runs and builds all frontend targets.</li> </ul>"},{"location":"commands/build/#arguments","title":"Arguments","text":"<ul> <li>[target]. The name of the build target to build.</li> </ul>"},{"location":"commands/build/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/build_assets/","title":"build:assets","text":"<p>Executes build:assets target frontend.</p>"},{"location":"commands/build_assets/#examples","title":"Examples","text":"<ul> <li><code>polymer build:assets --target=theme_build_admin</code>. Runs and builds the assets command for the \"theme_build_admin\" target.</li> </ul>"},{"location":"commands/build_assets/#arguments","title":"Arguments","text":"<ul> <li>target. The name of the build target to compile assets for.</li> </ul>"},{"location":"commands/build_assets/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/build_reqs/","title":"build:reqs","text":"<p>Executes build:reqs target frontend.</p>"},{"location":"commands/build_reqs/#examples","title":"Examples","text":"<ul> <li><code>polymer build:reqs theme_build_admin</code>. Runs and builds the reqs command for the \"theme_build_admin\" target.</li> </ul>"},{"location":"commands/build_reqs/#arguments","title":"Arguments","text":"<ul> <li>target. The name of the build target to setup pre-requisites for.</li> </ul>"},{"location":"commands/build_reqs/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/completion/","title":"completion","text":"<p>Dump the shell completion script</p> <p>The *%command.name% command dumps the shell completion script required to use shell autocompletion (currently, bash, fish, zsh completion are supported).</p>"},{"location":"commands/completion/#static-installation","title":"Static installation <p>Dump the script to a global completion file and restart your shell:</p> <pre><code>*%command.full_name%  | sudo tee /etc/bash_completion.d/polymer\n</code></pre> <p>Or dump the script to a local file and source it:</p> <pre><code>*%command.full_name%  &gt; completion.sh\n\n&lt;comment&gt;# source the file whenever you use the project\n*source completion.sh\n\n&lt;comment&gt;# or add this line at the end of your \"~/.bashrc\" file:\n*source /path/to/completion.sh\n</code></pre>","text":""},{"location":"commands/completion/#dynamic-installation","title":"Dynamic installation <p>Add this to the end of your shell configuration file (e.g. *\"~/.bashrc\"):</p> <pre><code>*eval \"$(/home/runner/work/polymer/polymer/bin/polymer completion )\"\n</code></pre>","text":""},{"location":"commands/completion/#arguments","title":"Arguments","text":"<ul> <li>[shell]. The shell type (e.g. \"bash\"), the value of the \"$SHELL\" env var will be used if this is not given</li> </ul>"},{"location":"commands/completion/#options","title":"Options","text":"<ul> <li>--debug. Tail the completion debug log</li> </ul>"},{"location":"commands/completion/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/composer_validate_security/","title":"composer:validate:security","text":"<p>Check security vulnerability in composer packages.</p>"},{"location":"commands/composer_validate_security/#examples","title":"Examples","text":"<ul> <li><code>polymer composer:validate:security</code>. Check security vulnerability in composer packages.</li> <li><code>polymer composer:validate:security --no-dev</code>. Do not inspect dev dependencies.</li> <li><code>polymer composer:validate:security --locked</code>. Only look at what is in the lock file.</li> </ul>"},{"location":"commands/composer_validate_security/#options","title":"Options","text":"<ul> <li>--no-dev. Disables auditing of require-dev packages.</li> <li>--locked. Audit based on the lock file instead of the installed packages.</li> </ul>"},{"location":"commands/composer_validate_security/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/help/","title":"help","text":"<p>Display help for a command</p> <p>The %command.name% command displays help for a given command:</p> <p>%command.full_name% list</p> <p>You can also output the help in other formats by using the --format option:</p> <p>%command.full_name% --format=xml list</p> <p>To display the list of available commands, please use the list command.</p>"},{"location":"commands/help/#arguments","title":"Arguments","text":"<ul> <li>[command_name]. The command name</li> </ul>"},{"location":"commands/help/#options","title":"Options","text":"<ul> <li>--format=FORMAT. The output format (txt, xml, json, or md) [default: txt]</li> <li>--raw. To output raw command help</li> </ul>"},{"location":"commands/help/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/list/","title":"list","text":"<p>List commands</p> <p>The %command.name% command lists all commands:</p> <p>%command.full_name%</p> <p>You can also display the commands for a specific namespace:</p> <p>%command.full_name% test</p> <p>You can also output the information in other formats by using the --format option:</p> <p>%command.full_name% --format=xml</p> <p>It's also possible to get raw list of commands (useful for embedding command runner):</p> <p>%command.full_name% --raw</p>"},{"location":"commands/list/#arguments","title":"Arguments","text":"<ul> <li>[namespace]. The namespace name</li> </ul>"},{"location":"commands/list/#options","title":"Options","text":"<ul> <li>--raw. To output raw command list</li> <li>--format=FORMAT. The output format (txt, xml, json, or md) [default: txt]</li> <li>--short. To skip describing commands' arguments</li> </ul>"},{"location":"commands/list/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/mk_docs/","title":"mk:docs","text":""},{"location":"commands/mk_docs/#arguments","title":"Arguments","text":"<ul> <li>command. The command to execute</li> </ul>"},{"location":"commands/mk_docs/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul>"},{"location":"commands/mk_docs/#aliases","title":"Aliases","text":"<ul> <li>mkdocs</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/polymer_init/","title":"polymer:init","text":"<p>Install the polymer</p>"},{"location":"commands/polymer_init/#examples","title":"Examples","text":"<ul> <li><code>polymer polymer:init</code>. Initialize the polymer configs.</li> </ul>"},{"location":"commands/polymer_init/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"commands/source_build_copy/","title":"source:build:copy","text":"<p>Copies files from source repo into artifact.</p>"},{"location":"commands/source_build_copy/#examples","title":"Examples","text":"<ul> <li><code>polymer source:build:copy --deploy-dir=/tmp/polymer-deploy-drupal</code>. Copies files from source repo into artifact.</li> </ul>"},{"location":"commands/source_build_copy/#options","title":"Options","text":"<ul> <li>--deploy-dir[=DEPLOY-DIR]. </li> </ul>"},{"location":"commands/source_build_copy/#global-options","title":"Global Options","text":"<ul> <li>-h, --help. Display help for the given command. When no command is given display help for the list command</li> <li>--silent. Do not output any message</li> <li>-q, --quiet. Only errors are displayed. All other output is suppressed</li> <li>-v|vv|vvv, --verbose. Increase the verbosity of messages: 1 for normal output, 2 for more verbose output and 3 for debug</li> <li>-V, --version. Display this application version</li> <li>--ansi. Force (or disable --no-ansi) ANSI output</li> <li>-n, --no-interaction. Do not ask any interactive question</li> <li>--simulate. Run in simulated mode (show what would have happened).</li> <li>--progress-delay=PROGRESS-DELAY. Number of seconds before progress bar is displayed in long-running task collections. Default: 2s.</li> <li>-D, --define=DEFINE. Define a configuration item value.</li> <li>--environment=ENVIRONMENT. Set the environment to load config from polymer/[env].polymer.yml file.</li> </ul> <p>Legend</p> <ul> <li>An argument or option with square brackets is optional.</li> <li>Any default value is listed at end of arg/option description.</li> <li>An ellipsis indicates that an argument accepts multiple values separated by a space.</li> </ul>"},{"location":"developing/command_invoker/","title":"Command invoker service","text":""},{"location":"developing/command_invoker/#how-to-invoke-a-command","title":"How to invoke a command","text":"<p>The <code>commandInvoker</code> service can be used to invoke other named commands.</p> <p>Example</p> <pre><code>$commandInvoker = $this-&gt;getContainer()-&gt;get('commandInvoker');\n$commandInvoker-&gt;invokeCommand($input, 'my:command', ['--option' =&gt; 'value']);\n</code></pre> <p>The above example will invoke the <code>my:command</code> command with the specified option.</p>"},{"location":"developing/command_invoker/#pinning-global-options","title":"Pinning global options","text":"<p>You can pin parameters by using the <code>$commandInvoker-&gt;pinGlobalOption($option, $value)</code> method. This will ensure that subsequent usage of the <code>commandInvoker</code> service will pass the pinned option as a parameter to the command being invoked.</p> <p>You can unpin an option by calling <code>$commandInvoker-&gt;unpinGlobalOption($option)</code>. This will prevent the option from being passed along to future command invocations.</p>"},{"location":"developing/command_invoker/#interaction-with-configuration","title":"Interaction with configuration","text":"<p>Configuration is loaded fresh for every command invocation. This means that config set during runtime will not be available to future command invocations.</p> <p>Example</p> <pre><code>$this-getConfig()-&gt;set('my.foo', 'bar');\n$commandInvoker = $this-&gt;getContainer()-&gt;get('commandInvoker');\n$commandInvoker-&gt;invokeCommand($input, 'my:command');\n</code></pre> <p>Notice that <code>my.foo</code> is set prior to invoking <code>my:command</code>. When the implementing method for <code>my:command</code> is executed and it tries to use <code>my.foo</code>, it will receive a <code>null</code> value because the configuration <code>my.foo</code> was set during runtime.</p>"},{"location":"developing/configuration/","title":"Configuration management","text":"<p>Configuration is discovered and loaded at the time of command execution. So, it is not available to be used during the bootstrap phase.</p>"},{"location":"developing/configuration/#contexts","title":"Contexts","text":"<p>Polymer's configuration system discovers and loads contexts provided by Core and it's extensions. The contexts are layered atop one and other, where contexts on top have the highest priority when retrieving a configuration value.</p> <p>Example</p> <p>Polymer discovers and loads, in order, the following contexts:</p> <ul> <li><code>system</code></li> <li><code>polymer</code></li> <li><code>extension_a</code></li> <li><code>extension_b</code></li> <li><code>project</code></li> <li><code>other</code></li> <li><code>process</code></li> </ul> <p>The <code>polymer</code> and <code>project</code> contexts both specify the configuration value keyed by <code>my.foo</code>. <code>polymer</code> specifies it as <code>my.foo=bar</code> and <code>project</code> as <code>my.foo=baz</code>.</p> <p>When the value <code>my.foo</code> is retrieved during runtime, the value <code>baz</code> is returned.</p>"},{"location":"developing/configuration/#the-process-context","title":"The <code>process</code> context","text":"<p>The <code>process</code> context is a special context that is always included at the top of the context stack. Any configuration that is set during runtime is stored in this context. That means any configuration set during runtime will override contexts with equivalent keys.</p>"},{"location":"developing/configuration/#discovering-contexts","title":"Discovering contexts","text":"<p>As the command is about to execute, Polymer initiates configuration compilation by discovering all available contexts, altering them, and finally compiling them, at which point the configuration is ready to be used.</p> <p>Registered event subscribers can subscribe to the following:</p> <ul> <li><code>CollectConfigContextsEvent::class</code></li> <li><code>AlterConfigContextsEvent::class</code></li> </ul> <p>For example, in an extension's service provider:</p> <pre><code>public function register(): void\n{\n    $container = $this-&gt;getContainer();\n    $container-&gt;addShared('drupalConfigContextProvider', ContextProvidersSubscriber::class)\n        -&gt;addArgument(new ResolvableArgument('drupalFileSystem'));\n}\n\npublic function boot(): void\n{\n    $container = $this-&gt;getContainer();\n    $container-&gt;extend('eventDispatcher')\n        -&gt;addMethodCall('addSubscriber', ['drupalConfigContextProvider']);\n}\n</code></pre> <p>And in <code>ContextProvidersSubscriber</code>:</p> <pre><code>public function addContexts(CollectConfigContextsEvent $event): void\n{\n    try {\n        $this-&gt;drupalFileSystem-&gt;getDrupalRoot();\n    } catch (\\OutOfBoundsException $e) {\n        // If Drupal root is not found, skip adding environment configuration.\n        return;\n    }\n    $site = $event-&gt;getInput()-&gt;getOption('site');\n    $environment = $event-&gt;getInput()-&gt;getOption('environment');\n    $drupalConfig = [];\n    $possibleConfigFiles = [];\n    if (is_string($site) &amp;&amp; in_array($site, $this-&gt;drupalFileSystem-&gt;getMultisiteDirs())) {\n        $sitePath = $this-&gt;drupalFileSystem-&gt;getDrupalRoot() . '/sites/' . $site;\n        $possibleConfigFiles['site'] =  $sitePath . '/polymer.yml';\n        if (is_string($environment)) {\n            $possibleConfigFiles['site_environment'] = $sitePath . '/' . $environment . '.polymer.yml';\n        }\n    }\n    $possibleConfigFiles = array_filter($possibleConfigFiles, function ($file) {\n        return file_exists($file);\n    });\n    foreach ($possibleConfigFiles as $configId =&gt; $file) {\n        $loader = new YamlConfigLoader();\n        $drupalConfig[$configId] = $loader-&gt;load($file)-&gt;export();\n    }\n    $event-&gt;addContexts($drupalConfig);\n}\n\npublic static function getSubscribedEvents(): array\n{\n    $events = [\n        CollectConfigContextsEvent::class =&gt; [\n            ['addContexts', -1000]\n        ],\n    ];\n    return $events;\n}\n</code></pre> <p>The above will add the <code>site</code> and <code>site_environment</code> contexts to the configuration.</p>"},{"location":"developing/configuration/#tokenized-values","title":"Tokenized values","text":"<p>Configuration values can be tokenized. For example, a context has <code>foo.bar: ${my.config.key}</code>. Assuming <code>my.config.key</code> can be resolved, <code>foo.bar</code> will be set to the value of <code>my.config.key</code>.</p>"},{"location":"developing/extending_polymer/","title":"Extending Polymer","text":"<p>Polymer provides a mechanism for other packages to extend Polymer's functionality.</p>"},{"location":"developing/extending_polymer/#extension-discovery","title":"Extension discovery","text":"<p>An extension is registered with Polymer if:</p> <ul> <li>A package contains the relative namespace <code>Polymer</code></li> <li>A file <code>ExtensionInfo.php</code> exists in that namespace and implements <code>DigitalPolygon\\Polymer\\Robo\\Extension\\PolymerExtensionInterface</code></li> </ul> <p>Example</p> <p>For example, if you have a package that has a psr-4 namespace of <code>My\\Package</code> that points to the package's <code>src</code> directory, then you need to place <code>src/Polymer/ExtensionInfo.php</code> in your package.</p>"},{"location":"developing/extending_polymer/#service-providers","title":"Service providers","text":"<p>An extension can provide a service provider to interact with the dependency injection (DI) container. This is useful for extensions that want to leverage DI for their own services or extend Polymer Core services (e.g. subscribing to events emitted by Polymer Core).</p> <p>To include a service provider with an extension, the service provider class:</p> <ul> <li>Must be located in the same directory as <code>ExtensionInfo.php</code></li> <li>Must be spelled using the camelCase name of your extension's ID (with the first letter capitalized)</li> <li>Must implement the interface <code>League\\Container\\ServiceProvider\\ServiceProviderInterface</code></li> </ul> <p>Note</p> <p>If you need your service provider to execute during the boot phase of the container, your service provider must implement <code>League\\Container\\ServiceProvider\\BootableServiceProviderInterface</code>.</p> <p>Danger</p> <p>Polymer Core at this point does not assume any responsibility for extensions that extend Core services outside of what is explicitly documented. Extensions assume complete reponsibility for  maintaining continued compatibility with Polymer Core services as they evolve over time during this early development phase.</p>"},{"location":"developing/extending_polymer/#adding-commands-and-hooks","title":"Adding commands and hooks","text":"<p>Polymer's hook and command mechanism is built atop Annotated Command.</p> <p>Command file names must end with <code>Commands.php</code> and be located within the <code>Polymer\\Plugin\\Commands</code> relative namespace. Similarly, hook file names must end with <code>Hooks</code> and be located within the <code>Polymer\\Plugin\\Hooks</code> relative namespace.</p> <p>This guide provides the essential steps to extend and customize Polymer WebOps Tooling according to your project\u2019s requirements.</p>"}]}